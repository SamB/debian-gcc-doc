#!/bin/sh -e

# DP: This patch was converted from gcc-ssp-default.dpatch
# DP: Original comment:
# DP:
# DP: Turn on -fstack-protector by default for C, C++, ObjC, ObjC++.
# DP: Build libgcc using -fno-stack-protector.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

--- gcc/doc/invoke.texi	2006-12-11 13:38:29.266229000 +0100
+++ gcc/doc/invoke.texi	2006-12-11 13:38:54.066229000 +0100
@@ -5829,6 +5829,10 @@
 when a function is entered and then checked when the function exits.
 If a guard check fails, an error message is printed and the program exits.
 
+NOTE: In Ubuntu 6.10 and later versions this option is enabled by default
+for C, C++, ObjC, ObjC++, if neither @option{-no-fstack-protector}
+nor @option{-nostdlib} are found.
+
 @item -fstack-protector-all
 Like @option{-fstack-protector} except that all functions are protected.
 
