#!/bin/sh -e

# DP: This patch was converted from classpath-tooldoc.dpatch
# DP: Original comment:
# DP:
# DP: manpages for gkeytool adn gjarsigner.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

--- java/gcj.texi	2006-08-08 01:16:37.903803000 +0200
+++ java/gcj.texi	2006-08-10 14:23:57.703803000 +0200
@@ -81,6 +81,10 @@
                             Generate stubs for Remote Method Invocation.
 * grmiregistry: (gcj)Invoking grmiregistry.
                             The remote object registry.
+* gkeytool: (gcj)Invoking gkeytool.
+                            Manage private keys and public certificates.
+* gjarsigner: (gcj)Invoking gjarsigner.
+                            JAR file signing and verification tool.
 @end direntry
 @end format
 
@@ -128,6 +132,8 @@
 * Invoking jv-convert:: Converting from one encoding to another
 * Invoking grmic::      Generate stubs for Remote Method Invocation.
 * Invoking grmiregistry:: The remote object registry.
+* Invoking gkeytool::   Manage private keys and public certificates
+* Invoking gjarsigner:: JAR file signing and verification tool
 * About CNI::           Description of the Compiled Native Interface
 * System properties::   Modifying runtime behavior of the libgcj library
 * Resources::		Where to look for more information
@@ -1439,7 +1445,7 @@
 @c man title grmiregistry Remote object registry
 
 @c man begin SYNOPSIS grmiregistry
-@command{grmic} [@option{OPTION}] @dots{} [@var{port}]
+@command{grmiregistry} [@option{OPTION}] @dots{} [@var{port}]
 @ignore
   [@option{--help}]
   [@option{--version}]
@@ -1468,6 +1474,247 @@
 
 @c man end
 
+@node Invoking gkeytool
+@chapter Invoking gkeytool
+
+@c man title gkeytool Manage private keys and public certificates
+
+@c man begin SYNOPSIS gkeytool
+@command{gkeytool} [@option{COMMAND}] [-- @option{COMMAND}] @dots{}
+@c man end
+
+@c man begin DESCRIPTION gkeytool
+
+@command{gkeytool} manages private keys and public certificates.
+
+@c FIXME: Add real information here.
+@c This really isn't much more than the --help output.
+
+@c man end
+
+@c man begin OPTIONS gkeytool
+
+Available options:
+
+@table @gcctabopt
+@item -genkey
+Generate a Key Entry, eventually creating a key store.
+
+@option{-alias @var{ALIAS}} @option{-keyalg @var{ALGORITHM}}
+@option{-keysize @var{KEY_SIZE}} @option{-sigalg @var{ALGORITHM}}
+@option{-dname @var{NAME}} @option{-keypass @var{PASSWORD}}
+@option{-validity @var{DAY_COUNT}} @option{-storetype
+@var{STORE_TYPE}} @option{-keystore @var{URL}} @option{-storepass
+@var{PASSWORD}} @option{-provider @var{PROVIDER_CLASS_NAME}}
+@option{-v}.
+
+@item -import
+Add Key Entries and Trusted Certificates.
+
+@option{-alias @var{ALIAS}} @option{-file @var{FILE}} @option{-keypass
+@var{PASSWORD}} @option{-noprompt} @option{-trustcacerts}
+@option{-storetype @var{STORE_TYPE}} @option{-keystore @var{URL}}
+@option{-storepass @var{PASSWORD}} @option{-provider
+@var{PROVIDER_CLASS_NAME}} @option{-v}.
+
+@item -selfcert
+Generate a self-signed Trusted Certificate.
+
+@option{-alias @var{ALIAS}} @option{-sigalg @var{ALGORITHM}}
+@option{-dname @var{NAME}} @option{-validity @var{DAY_COUNT}}
+@option{-keypass @var{PASSWORD}} @option{-storetype @var{STORE_TYPE}}
+@option{-keystore @var{URL}} @option{-storepass @var{PASSWORD}}
+@option{-provider @var{PROVIDER_CLASS_NAME}} @option{-v}.
+
+@item -identitydb
+NOT IMPLEMENTED YET.  Import JDK1.1 Identity Database.
+
+@option{-file @var{FILE}} @option{-storetype @var{STORE_TYPE}}
+@option{-keystore @var{URL}} @option{-storepass @var{PASSWORD}}
+@option{-provider @var{PROVIDER_CLASS_NAME}} @option{-v}.
+
+@item -certreq
+Issue a Certificate Signing Request (CSR).
+
+@option{-alias @var{ALIAS}} @option{-sigalg @var{ALGORITHM}}
+@option{-file @var{FILE}} @option{-keypass @var{PASSWORD}}
+@option{-storetype @var{STORE_TYPE}} @option{-keystore @var{URL}}
+@option{-storepass @var{PASSWORD}} @option{-provider
+@var{PROVIDER_CLASS_NAME}} @option{-v} @option{-attributes}.
+
+@item -export
+Export a Certificate from a key store.
+
+@option{-alias @var{ALIAS}} @option{-file @var{FILE}}
+@option{-storetype @var{STORE_TYPE}} @option{-keystore @var{URL}}
+@option{-storepass @var{PASSWORD}} @option{-provider
+@var{PROVIDER_CLASS_NAME}} @option{-rfc} @option{-v}.
+
+@item -list
+Print one or all Certificates in a key store to STDOUT.
+
+@option{-alias @var{ALIAS}} @option{-storetype @var{STORE_TYPE}}
+@option{-keystore @var{URL}} @option{-storepass @var{PASSWORD}}
+@option{-provider @var{PROVIDER_CLASS_NAME}} @option{-rfc}
+@option{-v}.
+
+@item -printcert
+Print a human-readable form of a Certificate in a @var{FILE}.
+
+@option{-file @var{FILE}} @option{-v}.
+
+@item -keyclone
+Clone a Key Entry in a key store.
+
+@option{-alias @var{ALIAS}} @option{-dest @var{ALIAS}}
+@option{-keypass @var{PASSWORD}} @option{-new @var{PASSWORD}}
+@option{-storetype @var{STORE_TYPE}} @option{-keystore @var{URL}}
+@option{-storepass @var{PASSWORD}} @option{-provider
+@var{PROVIDER_CLASS_NAME}} @option{-v}.
+
+@item -storepasswd
+Change the password protecting a key store.
+
+@option{-new @var{PASSWORD}} @option{-storetype @var{STORE_TYPE}}
+@option{-keystore @var{URL}} @option{-storepass @var{PASSWORD}}
+@option{-provider @var{PROVIDER_CLASS_NAME}} @option{-v}.
+
+@item -keypasswd
+Change the password protecting a Key Entry in a key store.
+
+@option{-alias @var{ALIAS}} @option{-keypass @var{PASSWORD}}
+@option{-new @var{PASSWORD}} @option{-storetype @var{STORE_TYPE}}
+@option{-keystore @var{URL}} @option{-storepass @var{PASSWORD}}
+@option{-provider @var{PROVIDER_CLASS_NAME}} @option{-v}.
+
+@item -delete
+Delete a Key Entry or a Trusted Certificate from a key store.
+
+@option{-alias @var{ALIAS}} @option{-storetype @var{STORE_TYPE}}
+@option{-keystore @var{URL}} @option{-storepass @var{PASSWORD}}
+@option{-provider @var{PROVIDER_CLASS_NAME}} @option{-v}.
+@end table
+
+Standard options:
+
+@table @gcctabopt
+@item --help
+Print a help message, then exit.
+
+@item --version
+Print version information, then exit.
+
+@item -@var{joption}
+Pass argument to the Java runtime.
+@end table
+
+@c man end
+
+
+@node Invoking gjarsigner
+@chapter Invoking gjarsigner
+
+@c man title gjarsigner Java ARchive (JAR) file signing and verification tool
+
+@c man begin SYNOPSIS gjarsigner
+@command{gjarsigner} [@option{OPTION}] @dots{} @var{FILE} @var{ALIAS}
+
+@command{gjarsigner} @option{verify} [@option{OPTION}] @dots{} @var{FILE}
+@c man end
+
+@c man begin DESCRIPTION gjarsigner
+
+@command{gjarsigner} is a tool for signing and verificating
+Java ARchive (JAR) files.
+
+@c FIXME: Add real information here.
+@c This really isn't much more than the --help output.
+
+@c man end
+
+@c man begin OPTIONS gjarsigner
+
+Signing options:
+
+@table @gcctabopt
+@item -keystore @var{URL}
+Location of the key store to use.  The default value is a file-based
+scheme whose path is the file named @code{.keystore} in your home
+directory.  If @var{URL} is malformed, the tool will use @var{URL} as
+a file name of a key store; i.e. as if the protocol was @code{file:}.
+
+@item -storetype @var{STORE_TYPE}
+Type of the key store to use.  If omitted, the default value is that
+of the property @code{keystore.type} in the security properties file.
+
+@item -storepass @var{PASSWORD}
+Password to unlock the key store.  If omitted, you will be prompted to
+provide a password.
+
+@item -keypass @var{PASSWORD}
+Password to unlock the Key Entry associated with @var{ALIAS}.  If omitted,
+the tool will use the same password protecting the key store.  If this
+fails, you will be prompted to provide a password.
+
+@item -sigfile @var{NAME}
+A literal to construct file names for both the @code{.SF} and
+@code{.DSA} signature files --which will be placed in the
+@code{META-INF} directory of the signed JAR.  Permissible characters
+are in the range @code{[a-zA-Z0-9_-]}.  If omitted, the first 8
+characters of @var{ALIAS} will be used.  Characters outside that range
+will be replaced by underscores.
+
+@item -signedjar @var{FILE}
+Name of the signed JAR file.  If omitted, the signed JAR will be named
+the same as @var{FILE}; i.e.  the input file will be replaced with its
+signed copy.
+@end table
+
+Verification options:
+
+@table @gcctabopt
+@item -verify
+Verify an already signed @var{FILE}.
+
+@item -certs
+Use with -verbose to see more detailed information about the
+certificates of @var{ALIAS}.
+@end table
+
+Common options:
+
+@table @gcctabopt
+@item -verbose
+Output more verbose messages during processing.
+
+@item -internalsf
+Include (otherwise do not) the @code{.SF} file in the @code{.DSA}
+generated file.
+
+@item -sectionsonly
+Include in the @code{.SF} generated file (otherwise do not) a header
+containing a hash of the whole manifest file.
+
+@item -provider @var{PROVIDER_CLASS_NAME}
+Fully qualified class name of a Security Provider to add to the JVM
+in-use.
+@end table
+
+Standard options:
+
+@table @gcctabopt
+@item --help
+Print a help message, then exit.
+
+@item --version
+Print version information, then exit.
+
+@item -@var{joption}
+Pass argument to the Java runtime.
+@end table
+
+@c man end
+
 
 @node About CNI
 @chapter About CNI
